프로젝트 만들 폴더로 터미널 이동
    현재 경로 확인
        pwd
    폴더이동 
        하위폴더는 폴더명과 폴더명 사이에 / 로 이루어져 있고,
        상위폴더는 ..을 쓰면된다
        cd 폴더명
    
리엑트 프로젝트 만들기
    npx create-react-app 프로젝트명

CRA(create-react-app)
    React에서 따로 설피하지 않아도 필요한 라이브러리들을 자동으로 설치해주고
    폴더구조도 자동으로 만들어주는 일종의 명령어
    최고의 장점은 설정하기 까다라오누 바벨과 웹팩을 초기 패키지에 포함해준다

바벨(babel)
    트랜스파일러(번역기)
    ES6문법 이상의 문법을 지원하지 않는 브라우저가 이해할 수 있도록
    ES5이하의 문법으로 자동으로 변환
    최신버전이 지원되지 않는 브라우저에 맞는 버전의 언어로 변환해준다

웹팩
    가장 많이 사용하는 모듈 번들러(서로 구분하고 묶어주는 것)
    애플리케이션을 구성하는 자원(html,css,js,img.....)등을 모두 각각의 모듈로 보고 
    이를 종합하여 하나의 결과물로 만드는 도구

모듈
    프르그래밍 관점에서 특정 기능을 갖는 작은 코드 단위(코드집합)
    //반올림,올림,절삭 같은 함수를 수학으로 묶어놨어!!


todolist 프로젝트   
    우리가 배울 내용들을 todolist 프로젝트 안에서 페이지별로 분기(나누어)하여 누적
    + ReactJS 입문자가 하기에 가장 적절한 미니프로젝트(토이프로젝트)


.gitignore 파일
    github에 코드를 공유할때 공유되면 안되는 코드들, 파일들,(비밀번호,API Key,......)을 알려주는 파일
    공유하기에는 용량이 너무나도 큰 경우(node_modules)

node_modules
    기본적으로 필요한 라이브러리들이 들어있는 폴더, 용량이 매우 큽니다
    이때 node_modules(라이브러리)가 제외된 리액트 프로젝트를 공유받아서
    실행시키고자 한다면 직접 라이브러리들을 설치해야 하는데
    필요한 라이브러리 정보는 package.json이 dependencies 부분에서 알고있다
    따라서  
        npm install
            혹은
        npm i
    라고 입력하면 알아서 dependencies 부분에 있는 라이브러리들을 자동으로 설치해준다
    

package.json
    json파일(Javascript Object Notation)
        Javascript 객체 문법을 구조화된 데이터로 표현하기 위한 문자 기반의 표준 format

    React프로젝트를 총괄하는 역할을 한다(React 프로젝트에 대한 여러개의 값이 들어있는 파일)

dependencies
    해당 프로젝트를 실행하기 위해서 필요한 라이브러리들의 정보가 들어있다
    dependencies에는 node_modules에 들어있는 라이브러리들에 대한 정보가 들어있다

localhost
    사용자 고유의 ip 주소(컴퓨터의 주소) 127.0.0.1
    localhost(localhost라는 변수에 ip주소를 담음)

port 번호
    컴퓨터안에서 프로그램을 찾을 때 사용하는 번호
    port번호는 프로그램을 구분하기 위해 사용하기 때문에 각각의 프로그램이 실행중이라면
    부여받은 port번호를 사용하고 있다 (프로그램의 주소)
    파일다운로드 --> 같은 ip이지만 9000포트
    카카오톡--> 같은 ip이지만 9001포트

    리액트는 기본 포트 번호가 3000으로 부여되어 있음
    (8000번대 들은 공용 포트로 사용중이기에 포트라 겹치게 되면 실행이 안됨)

scripts
    실팽시킬 명령어에 대한 정보가 들어있다
    start : 배포하기 전 사용할 용도(평소에)
    bulid : 배포할 폴더를 만들기 위해 사용(프로그램 출시때 마지막에 한번만)
    test : 테스트 주도 개발(Test Driven Development)
    eject : 숨겨진 폴더를 확인 용도

terminal 종료
    쓰레기통 클릭
        혹은
    ctrl + c 

port번호 변경
    윈도우
        set Port = 번호 &&
    맥
        export PORT = 번호 &&

json은 주석 사용 불가

필요없는 파일 지우기
    public 폴더에는 
        favicon.ico
        index.html
        만 남기기

    src폴더에는
        App.js 
        index.js 
        만 남기기

react동작 원리
    컴포넌트(UI 단위)를 만든다
    그리고 만든 컴포넌트를 랜더링 한다
    
    1.index.html 속 html 코드에서 index.js가 자식으로 렌더링 하고자 하는 태그를 찾아온다
    2.그 태그 속에 자식으로 컴포넌트를 렌더링(기본 컴포넌트 App)
    3.App 컴포넌트는 App.js에 있는 App함수의 return 부분의 (태그묶음)이다
    
component 만들 때 주의사항
    대문자로 시작한다
    return 옆에는 무조건 하나의 태그 혹은 하나의 컴포넌트가 되어야 한다(자식이 몇개든 상관없음)
        보동은 div태그로 묶어주거나 만일 html 코드에 div가 보이는 것이 싫다면 
        비어있는 태그 <></> (fragments)로 묶어줄 수 있다
        (그룹화가 되어 하나의 덩어리가 된다)
        실직적으로 태그가 추가되는 것은 아님

CSS-in-JS
    .css 파일을 만들어서 스타일을 적용할 수도 있지만
    js안에서 css문법을 사용하고 적용하면 좋지않을까?

    라이브러리
        Styled-components, Emotion,.....

    React와 같은 SPA 개발에서 js 안에서 html,css 모두 기술하여
    문서의 구조와 로직에 스타일링 코드까지 같은 위치에 구성할 수 있다
    --> 응집도를 높일 수 있다(컴포넌트를 사용하려면 한개 파일봐~,스마트폰[스마트폰 전에는 디카,mp3각각 들고다님])
    ---> 굳이 다른 파일을 가지고 오거나 옮기지 않아도 컴포넌트 하나만 있으면 된다!

styled-components   
    React의 css 스타일링 방법 중 하나,
    css 파일이 아닌 js파일에 직접 기술하는 css-in-js의 한 종류
    컴포넌트를 호출할 때 필요한 css를 호출
    class 이름을 설정하지 않아서 스타일이 겹치는 오류를 방지

    설치
        설치하고자 하는 프로젝트 폴더에서 
            npm i(nstall) styled -components

styled components 자동완성 확장팩
    vscode-styled-components

import 
    참조, 불러오는 것 , 이 파일 안에서 (라이브러리,다른 파일,함수,변수,......)
    import 이름 from 경로(or 라이브러리이름)
    
export 
    다른 파일에서 import하여 사용할 수 있도록 밖으로 내보내기(export된것만 import 해서 쓸 수 있음)
    


