OT
    이름 : 배상엽강사
    메일 : cidea100@naver.com
        제목 : 1900 프론트 박시은
        본문 : 코드전체, 오류메세지
    
    자료 : ㅋ카오톡 오픈채팅방 및 구글드라이브
    구글드라이브 : https://drive.google.com/drive/folders/1bRjbcsVvJYWVxBa_oLzkuLW04PYUrMSn?usp=sharing

    React JS 
        복잡한 사용자 인터페이스(UI)를 쉽게 구축하기 위해
        페이스북에서 제작한 라이브러리

    라이브러리 (Library,도서관)
       프로그램 개발 과정에서 사용할 수 있는 여러가지 파일(도구)들의 모음
        같은 로그인 로직이라 하더라도 사용자는 정해져있는 코드를 사용하는 것이 아니라
        필요로 하는 라이브러리를 선택해서 선택적으로 코드에 적용시킬 수 있다
        ex)nodeJs 설치시 같이 설치되는 모든 패키지,
           ReactJS,jQuery

    프레임워크(framework,작업틀)
        코드를 작성할 때 필요한 틀을 제공해주는 것,
        개발을 할 때 제어권은 개발자가 아닌 프레임워크에 존재
        ex)spring, django, nextJs, nuxtJs ,......, flutter

ReactJs와 nodeJs
    Node.js에는 React를 보다 쉽게 사용할 수 있는 다양한 도구들을 내장하고 있다
    그리고 opensource로서 방대한 양의 코드를 무료로 사용할 수 있으며
    Javascript runtime environment로서 자바스크립트를 공부한 사람들이면 쉽게
    이해할 수 있기 때문에 NOde.js를 설치한다

Node.js
    Node.js is an open-source, cross-platform Javascript runtime environment,
    Node.js란 오픈소르로 만들어져있고, 크로스플랫폼 자바스크립트 런타임이다
    (안드로이드 스튜디오 같은게 플랫폼에 구애받는다)
    
    Node.js는 chrome V8 Javascript 엔진으로 빌드 되어있다

    과거에는 자바스크립트를 실행할 수 있는 도구는 브라우저 밖에 없었다.
    =>자바를 IDE를 통해 독립적으로 실행 가능했다 
    chrome V8 버전이 만들어지며 자바스크립트 실행기를 새롭게 만들 수 가 있었다

    chrome V8(자바스크립트 엔진(코드번역과 실행))+ libuv(c,c++기반 I/O[input/output] 라이브러리) = 노드

    서버와 통신할 때 사용

서버와 클라이언트 (둘다 컴퓨터다!!)
    저번에 너 과제한거 ppt쫌 보내줘~ 같은느낌
    서버는 데이터를 찾아서 보내주기만 하면된다 (=모니터가 필요없다)
    모바일도 클라이언트 가능(앱스토어에서 앱 설치 파일 보내줘~)
    서버도 클라이언트 가능(서버도 다른 서버한테 데이터 달라고 할 수 있다)

    서버는 네트워크를 통해 클라이언트에 정보나 서비스를 제공하는 컴퓨터 또는 프로그램을 의미

    브라우저(클라이언트) --> html문서 갖다주세요(request) --> 서버   
                                찾은문서,데이터(respond)                     <--
    
    구글플레이스토어(클라이언트)에서 앱설치(request)를 하면
    서버에서 앱설치파일을 제공(respond)한다

        [원래는 자바나 파이썬으로 서버를 다뤄야 하는데,,,, nodejs를 쓰면 js형식으로 써서 서버이용 가능]

    노드는 자바스크립트 프로그램이 서버로서 기능할 수 있도록 하는 도구를 제공한다
    따라서 다른 언어를 굳이 사용하지 않고 개발할 수 있다는 장점이 생긴다

자바스크립트 런타임(runtime environment)
    런타임 : 특정 언어로 만든 프로그램 들을 실행할 수 있는 환경을 의미한다
        //자바 런타임이라면 자바로 만든 프로그램을 실행시킬수 있는 환경
        //즉 노드가 해준다!! 옛날에는 브라우저 항상켜서 했었다
    노드는 자바스크립트로 만든 프로그램을 실행시킬 수 있는 환경 === 자바스크립트 실행기

-----------------------------------------------------------------------------------------

NodeJS설치
    구글크롬 Node.js 검색 > 가장위에 링크 클릭 > LTS버전(최신안정버전) 혹은 최신버전 다운로드
    > 다운로드 받은 파일 클릭해서 Next....

NodeJs 설치 유무 확인
    맥 : terminal
    윈도우 : powershell

    버전확인 > powershell > node -v 
                            npm -v  로 확인
    
    백팁 (템플릿 문자열 만들때) + ctrl + shift =>terminal 단축키

Visual Studio Code에서 터미널 열기
    터미널 > 새터미널 

npm(Node Package Manager)
    노드에서 사용할 수 있는 패키지(코드들의 모음,모듈, 라이브러리)들이 저장되어있는 서버 
    npm을 통해서 다양한 자바스크립트 개발자들이 올려놓은 코드를 다운로드 받을 수 있다
    node.js 설치 할 때 같이 설치가 된다
    npm으로 패키지(다른사람의 라이브러리) 다운로드 받기
        npm install 라이브러리명
        npm i 라이브러리명

        npm i -g 라이브러리명( 노드 환경 전역에서 설치)
        npm i -D 라이브러리명(개발환경에서만 사용할 라이브러리 설치)

        npm으로 패키지 삭제하기
            npm remove 라이브러리명
            npm rm 라이브러리명


npx(A tool for executing Node package)
    npm과 달리 설치는 하지않고 실행만 시켜주는 도구
    개발자입장에서는 npm과 npx 차이를 느끼지 못한다
    npx를 사용하면 리엑트 프로젝트를 만들 때 관련 라이브러리를 다운로드 하지 않기 때문에 가벼워진다
    npm 5.2이상부터는 기본으로 설치되어 있다

yarn
    페이스북에서 제작,리엑트 혹은 리엑트 네이티브 진영에서 많이 발견되며 npm과 비교하여 몇가지 편리한 기능이 있지만
    별도로 설치 해야 한다
    npm서버가 너무 느리면 yarn을 사용하여 다운로드 받을 수 있다
    npm이 가장많이 쓰이기 때문에 yarn을 지원하지 않는 라이브러리가 존재한다



생성 명령어
npx create-react-app "파일명"


reACT 프로젝트 만들기
    1.터미널에서 프로젝트 폴더를 만들 공간으로 이동을 해야한다
        cd폴더이름 --> 해당 폴더로 이동
        cd"폴더이름" --> 폴더이름이 명령어랑 겹치거나 띄어쓰기가 있는 경우
        폴더 안에 있는 폴더는 /로 구분을 한다
        cd .. --> 상위 폴더로 이동

    2.npx create-react-app 프로젝트폴더이름

react 프로젝트 실행시키기
    1.실행시킬 리액트 프로젝트 폴더로 이동
        cd 폴더이름
    2. npm start


react의 기본 개념
    components 
     모든 복잡한 구성 요소(UI)를 단위화 시켜서 분리시키자
    한 가지의 기능을 수행하는 UI단위
    컴포넌트는 DOM Tree처럼 Virtual Tree 가상의 돔트리 형식으로 만들어짐(부모자식,포함관계 있다)

    render
        랜더링 한다
        구성요소(component)를 웹사이트에 그리는 과정
    re-render  
        상태가 변한 부분만 다시 렌더링 한다
        리액트는 업데이트 이전의 가상 돔트리와 업데이트 이후 가상 돔 트리 상태를 비교하고
        업데이트된 내용이 있다면 그 때만 DOM Tree를 업데이트 하고 다시 rendering 한다
    ==> 결국 react 는 복잡한 Ui를 구성요소별로 쪼개고, 코드를 재사용하며 상태가 변한 부분만 re-rendering 함으로써
    유지보수를 쉽게 할 수 있도록 만들어진 Javascript 라이브러리이다

CSR(client Side Rendering)
    사용자가 웹페이지를 그리는 방식
    사용자가 웹사이트 접속 --> 프론트엔드 서버에 페이지를 렌더링 할 떄 필요한 리소르를 전달

    ex) 무신사 접속 --> 페이지가 로드 되었을 때 상품 목록이 표시되는데, 이는 백엔드 서버에서 응답받은 데이터

    장점 
        페이지에 필요한 리소스를 미리 사전에 불러와서 데이터를 캐싱(저장)하고 있다가
        URL에 맞는 페이지를 보여주기 때문에 초기 렌더링 이후의 렌더링 속도가 빠름
    단점
        초기페이지 로딩이 (SSR방식보다) 상대적으로 느림
        SEO(검색엔진최적화)에 불리(빈화면이라 인식) // 사용자가 들어왔으때 검색해버림

SSR (Server Side Rendering)
    서버에서 페이지를 그린다
    사용자가 웹페이지를 접속 --> 서버에서 랜더링 후 --> 사용자에게 전달
    js가 실행 되기 이전에 완성된 페이지를 사용자가 먼저 확인//js안쓰고 빽단에서 다 만들어놓고 프론트쪽으로(html,css,js)로 뿌려주기

    장점
        SEO유리,웹사이트 크롤링 후 정보 제공 가능
        빠른 완성된 페이지 로딩 속도
        서버에서 랜더링 부담하기 떄문에 사용자의 부담이 덜함
    
    단점
        서버의 부담(생산 비용 증가)
        무거운 페이지라면 CSR보다 오래걸릴 가능성 존재, 더많은 생산비용

리엑트는 CSR,SPA

    SPA(simple Page Application)
        html파일이 한개

NPA(Multi Page Application) //SSG쇼핑몰
    html파일 여러개
    보통은 SSR방식으로 요청마다 해당 페이지에 필요한 리소스를 불러온다
    







