setState()함수
    setState() 함수가 호출되어 state에 변화가 생겼다면
    리액트는 이 변화된 부분을 감지하여 re-rendering 하는 것이 원칙이다
    이떄 한 컴포넌트 내에서 state변화가 여러개가 일어날 수 있다
    여러개의 변화가 동시에 일어난다면 리액트는 변화가 일어날때마다
    re-radnering을 하는 것이 아니라(성능저하문제)
    변경해야 할 state를 먼저 알려주고, 다른 state의 변경요청까지 모두 받은다음
    종합적으로  한 번에 묶어서 state를 변화시키기 때문이다

    그러나 마지막에 요청한 변화만 반영시키고자 하는 것이 아니라
    순서대로 변화를 반영하고 싶다면 setstate()함수의 인자로 값이 아닌 함수를 넘겨주면 된다

state 변화
    한 번에 여러번 state변화가 생기면
    바로바로(동기적으로) state가 변경되는 것이 아니라
    변경해야할 state의 정보를 취합하고, 모든 state의 변경요청을 받은 후
    한 번에 묶어서 state를 변경한뒤 리렌더링을 한다

    이로 인해 setState()인자 값으로 함수가 아닌 값을 넘겨주면 동일한 state에서는
    마지막에 요청된 변경만 반영이 된다
    이를 방지하고자 한다면 setState()인자값으로 함수를 넘겨주면 된다

    인자로 함수를 넘겨주더라도 동기적으로 state가 변경되는 것은 아니지만
    인자로 넘겨받은 함수가 저장공간(queue)에 저장이 되어 순서대로 동작하기 때문에
    첫번째 인자 함수 return값으로 업데이트된 state가 두번째함수 인자값으로 들어가게 되는
    방식으로 최신 상태가 유지된다


삼항연산자
    조건식? 참일때 값 : 거짓일때 값

논리연산자
    a && b a 그리고 b 모두 참이라면 결과는 참
             그러지 않다면 결과는 거짓
    a || b a혹은 b 둘 중 하나라도 참이라면 결과는 참
            그렇지않다면 결과는 거짓

    논리연산자는 맥락 평가(불필요한 검사는 수행x)에 의해 연산 결과가 달라진다
    ex) && 연산자는 앞의 피연산자가 거짓이라는 것이 밝혀지면 뒤족은 볼 필요 없기 때문에
        앞에만 확인하고 끝난다
    ex) 참 || ??
        || 연산자는 앞의 피연산자가 참이라는 것이 밝혀지면 뒤쪽은 보지 않는다

    *논리연산자의 피연산자는  불린타입만 오는것이 아니라 모든 타입이 다 올수가 있고, 논리연산의 결과도
    맥락평가에 의한 모든 타입이 결과로 나올 수 있다

1.논리연산자의 피연산자를 우선 참 거짓으로 변환한다
2.맥락평가에 의해 마지막에 평가한 대상이 연산 결과이다


'안녕' && 7 --> 논리연산의 결과는 7

javascript에서 true와 false로 생각하는 값
    0 false, 0을 제외한 숫자는 true
    '' false , ''을 제외한 문자열은 true
    0.0 false , 0.0을 제외한 숫자는 true

    undefined null NaN --> false

style을 매길 때 props를 전달 받아 특정 상황이나 조건에서는 다른 디자인을 입힐 수 있다
    styled.태그명`
        css속성 : ${(props)=>props부모로부터 받은 값 ? 참이면적용시킬css속성값 : 거짓이면적용시킬css속성값}
         -> {}쓰는 이유는 비구조화해서 가져올려고
          ->  !!참일떄만 적용할때!!
        
        css속성 : ${(props)=>props && 부모로부터 받은 값이 참일때 적용시킬 속성값} // 거짓일때는 아무디자인 적용X
        
        css속성 : ${(props)=>props || 부모로부터받은값이 거짓일떄 적용시킬 속서값} // 참일때는 XX // 
        ->!!거짓일때만 적용 할떄!!
    `

페이지 이동하기(a태그)
    s 태그의 목적은 페이지이동 (다른 html 문서 열기)
    이름 대체하여 사용할 수 있는 것이 Link 컴포넌트(react-route-dom)
    <Link to ='주소'></Link>